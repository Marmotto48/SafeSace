import React, { useState } from "react";
//import { newPost } from "../../../JS/postSlice";
import "./writePost.css";
import { useDispatch } from "react-redux";
import { addpost } from "../../../redux/postSlice";
import Modal from "react-bootstrap/Modal";
import check from "./check-circle.gif";
import { AiFillQuestionCircle } from "react-icons/ai";
import { Link } from "react-router-dom";
import ReactQuill from "react-quill";
import "react-quill/dist/quill.snow.css";


const Addapost = () => {
  const dispatch = useDispatch();
  const [postInfo, setPostInfo] = useState({});
  // const [isChecked, setIsChecked] = useState(false);
  // const handleChange = (e) => {
  //   const target = e.target;
  //   const name = target.name;
  //   const value = target.type === "checkbox" ? target.checked : target.value;
  //   setPostInfo({ ...postInfo, [name]: value });
  //   setIsChecked({ ...isChecked, [name]: value });
  // };

  // const handleChangeChk = (e) => {
  //   setIsChecked({ ...isChecked, [e.target.checked]: e.target.value });
  // };
  const handleChange = (e) => {
    setPostInfo({ ...postInfo, [e.target.name]: e.target.value });
  };

  const handleSubmit = (e) => {
    e.preventDefault();
    dispatch(addpost({ postInfo }));
  };

  //modal
  const [show, setShow] = useState(false);
  const handleClose = () => setShow(false);

  return (
    <div className="write-post">
      <form>
        <h3>Add a new post</h3>
        <div className="addPost-card">
          <p>Title</p>
          <input
            type="text"
            name="title"
            onChange={handleChange}
            placeholder="Title"
          />
          <p>Category</p>
          <div className="select-categ">
            <select
              name="category"
              onChange={handleChange}
              // onChange={handleUpdate}
            >
              <option value="" name="category">
                Choose...
              </option>
              <option value="Anxiety">Anxiety disorders</option>
              <option value="children">
                Behavioural and emotional disorders in children
              </option>
              <option value="Bipolar">Bipolar affective disorder</option>
              <option value="Depression">Depression</option>
              <option value="DDD">
                Dissociation and dissociative disorders
              </option>
              <option value="Eating">Eating disorders</option>
              <option value="Paranoia">Paranoia</option>
              <option value="OCD">Obsessive compulsive disorder</option>
              <option value="Psychosis">Psychosis</option>
              <option value="Schizophrenia">Schizophrenia</option>
              <option value="PTSD">Post-traumatic stress disorder</option>
              <option value="AD">Adjustment disorders</option>
              <option value="PD">Personality disorders</option>
              <option value="FD">Factitious disorders</option>
              <option value="SGD">Sexual and gender disorders</option>
              <option value="SSD">Somatic symptom disorders</option>
              <option value="Tic">Tic disorders</option>
            </select>
            <Link to={{ pathname: "/faq" }}>
              <AiFillQuestionCircle className="question-icon" />
            </Link>
          </div>

          {/* <p>Tags</p>
          <input
            type="text"
            name="title"
            onChange={handleChange}
            placeholder="Title"
          /> */}

          <p>Description</p>
          {/* <textarea
            placeholder="Description"
            name="description"
            onChange={handleChange}
          > */}
          <input
            className="desc-input"
            type="text"
            name="description"
            onChange={handleChange}
            placeholder="Description"
          />
        </div>
        <div className="addPost-footer">
          {/****************** Private and public Try 3 ***********************/}
          {/* <input
            type="checkbox"
            name="checked"
            value="check"
            style={{ cursor: "pointer" }}
            checked={isChecked}
            onChange={(e) =>
              setIsChecked({
                ...postInfo,
                [e.target.checked]: e.target.checked ?? e.target.value,
              })
            }
          />
          <label htmlFor="private"> Private </label> */}
          {/****************** Private and public Try 4 ***********************/}
          {/* <label class="switch">
            <input
              type="checkbox"
              defaultChecked={isChecked}
              onChange={handleChangeChk}
            />
            <span class="slider round"></span>
          </label> */}
          {/****************** Private and public Try 5 ***********************/}

          <select
            name="private_2"
            onChange={handleChange}
            // onChange={handleUpdate}
          >
            <option value="" name="private_2">
              Choose...
            </option>
            <option value="Public">Public</option>
            <option value="Private">Private</option>
          </select>


          <button
            type="submit"
            onClick={
              (handleSubmit,
              (e) => {
                e.preventDefault();
                dispatch(addpost({ postInfo }));
                setShow(true);
              })
            }
            // onClick={handleSubmit}
            className="addPost-btn"
          >
            add post
          </button>
        </div>
      </form>
      <Modal show={show} onHide={handleClose} centered>
        <Modal.Body>
          <div className="addPost-modal">
            <img className="check" src={check} alt="" />
            <p>New post added!</p>
            <div className="modal-btns">
              <button className="visit-btn">Visit post</button>

              <button className="visit-btn" onClick={handleClose}>
                Close
              </button>
            </div>
          </div>
        </Modal.Body>
      </Modal>
      <div className="circle-3"></div>
      <div className="circle-4"></div>
      <div className="circle-5"></div>
      <div className="circle-6"></div>
    </div>
  );
};

export default Addapost;



Addapost.modules = {
  toolbar: [
    [{ header: "1" }, { header: "2" }, { font: [] }],
    [{ size: [] }],
    ["bold", "italic", "underline", "strike", "blockquote"],
    [
      { list: "ordered" },
      { list: "bullet" },
      { indent: "-1" },
      { indent: "+1" },
    ],
    ["link", "image", "video"],
    ["clean"],
  ],
  clipboard: {
    // toggle to add extra line breaks when pasting HTML:
    matchVisual: false,
  },
};
/*
 * Quill editor formats
 * See https://quilljs.com/docs/formats/
 */
Addapost.formats = [
  "header",
  "font",
  "size",
  "bold",
  "italic",
  "underline",
  "strike",
  "blockquote",
  "list",
  "bullet",
  "indent",
  "link",
  "image",
  "video",
];
